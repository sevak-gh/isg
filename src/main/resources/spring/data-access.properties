# Database connection settings
#hibernate.connection.driver_class=com.mysql.jdbc.Driver
#hibernate.connection.url=jdbc:mysql://172.16.14.15:3306/test
#hibernate.connection.username=root
#hibernate.connection.password=111111

# JDBC connection pool (use the built-in)
#hibernate.connection.pool_size=1

# SQL dialect
hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

# Enable Hibernate's automatic session context management
hibernate.current_session_context_class=thread

# hibernate transaction factory
#hibernate.transaction.factory_class=org.hibernate.transaction.JDBCTransactionFactory

# Disable the second-level cache
#hibernate.cache.provider_class=org.hibernate.cache.internal.NoCacheProvider

# Echo all executed SQL to stdout
hibernate.show_sql=true

# Drop and re-create the database schema on startup
# hibernate.hbm2ddl.auto=update

# tomcat connection pool settings
connectionpool.initialSize=5
connectionpool.maxActive=20
connectionpool.maxIdle=5
connectionpool.minIdle=2

# hikari connection pool settings
# -------------------------
# This property controls the maximum number of milliseconds that a client (that's you) 
# will wait for a connection from the pool. If this time is exceeded without a connection 
# becoming available, a SQLException will be thrown
isg.hikari.connectionTimeout=10000
# This property controls the maximum amount of time that a connection is allowed to 
# sit idle in the pool
isg.hikari.idleTimeout=60000
# This property controls the maximum lifetime of a connection in the pool
# We strongly recommend setting this value
isg.hikari.maxLifetime=300000
# for maximum performance and responsiveness to spike demands, we recommend not
#  setting this value and instead allowing HikariCP to act as a fixed size connection pool
isg.hikari.minimumIdle=10
# This property controls the maximum size that the pool is allowed to reach, 
# including both idle and in-use connections
isg.hikari.maximumPoolSize=50
# if you want your application to start even when the database is down/unavailable, 
# set this property to false
isg.hikari.initializationFailFast=false

